version: "3.5"

networks:
  boilerplate_network:
    name: boilerplate_network

services:
  boilerplate_app:
    restart: on-failure
    container_name: boilerplate_app
    build:
      context: ..
      dockerfile: ./docker/Dockerfile
      target: development
    env_file: ./settings/development.env
    command: gunicorn conf.wsgi:application --bind 0.0.0.0:8000 --reload --threads=10
    volumes:
      - ../src:/srv
    depends_on:
      - boilerplate_db
    networks:
      - boilerplate_network

  boilerplate_startup:
    container_name: boilerplate_startup
    build:
      context: ..
      dockerfile: ./docker/Dockerfile
      target: development
    env_file: ./settings/development.env
    command: python manage.py migrate
    volumes:
      - ../src:/srv
    depends_on:
      - boilerplate_app
    networks:
      - boilerplate_network

  boilerplate_celery:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile
      target: development
    command: "celery -A apps.celery worker --loglevel=INFO"
    container_name: boilerplate_celery
    env_file: ./settings/development.env
    volumes:
      - ../src:/srv
    depends_on:
      - boilerplate_redis
#    entrypoint: ["sh", "-c", "sleep 2073600"]
    networks:
      - boilerplate_network

  boilerplate_db:
    container_name: boilerplate_db
    image: postgres:14
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - ../dumps:/dumps
    networks:
      - boilerplate_network

  boilerplate_nginx:
    container_name: boilerplate_nginx
    image: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d
      - ../:/srv
    ports:
      # To run multiple projects at once, change it to 8001:80 etc.
      - 8001:80
    depends_on:
      - boilerplate_app
    networks:
      - boilerplate_network

  boilerplate_redis:
    container_name: boilerplate_redis
    image: redis
    networks:
      - boilerplate_network
