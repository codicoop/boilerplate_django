version: "3.5"

networks:
  boilerplate-network:
    name: boilerplate-network

services:
  boilerplate-app:
    restart: on-failure
    container_name: boilerplate-app
    build:
      context: ..
      dockerfile: ./docker/Dockerfile
      target: development
    env_file: ./.env
    command: gunicorn conf.wsgi:application --bind 0.0.0.0:8000 --reload --threads=10
    volumes:
      - ../src:/srv
    depends_on:
      - boilerplate-db
    networks:
      - boilerplate-network

  boilerplate-startup:
    container_name: boilerplate-startup
    build:
      context: ..
      dockerfile: ./docker/Dockerfile
      target: development
    env_file: ./.env
    command: python manage.py migrate
    volumes:
      - ../src:/srv
    depends_on:
      - boilerplate-app
    networks:
      - boilerplate-network

  boilerplate-celery:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile
      target: development
    command: "celery -A apps.celery worker --loglevel=INFO"
    container_name: boilerplate-celery
    env_file: ./.env
    volumes:
      - ../src:/srv
    depends_on:
      - boilerplate-redis
#    entrypoint: ["sh", "-c", "sleep 2073600"]
    networks:
      - boilerplate-network

  boilerplate-db:
    container_name: boilerplate-db
    image: postgres:14
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - ../dumps:/dumps
    networks:
      - boilerplate-network

  boilerplate-redis:
    container_name: boilerplate-redis
    image: redis
    networks:
      - boilerplate-network
